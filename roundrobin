#include <stdio.h>
#include <string.h>

typedef struct {
    char name[4];
    int bt;
    int remaining_bt;
    int tat;
    int wt;
} Process;

void findavgTime(Process processes[], int n, int quantum) {
    int total_wt = 0, total_tat = 0, t = 0;
    int done = 0;

    while (done < n) {
        done = 0;
        for (int i = 0; i < n; i++) {
            if (processes[i].remaining_bt > 0) {
                if (processes[i].remaining_bt > quantum) {
                    t += quantum;
                    processes[i].remaining_bt -= quantum;
                } else {
                    t += processes[i].remaining_bt;
                    processes[i].wt = t - processes[i].bt;
                    processes[i].remaining_bt = 0;
                }
            }
            if (processes[i].remaining_bt == 0) {
                done++;
            }
        }
    }

    for (int i = 0; i < n; i++) {
        processes[i].tat = processes[i].bt + processes[i].wt;
        total_wt += processes[i].wt;
        total_tat += processes[i].tat;
    }

    printf("Process Burst Time Waiting Time Turn Around Time\n");
    for (int i = 0; i < n; i++) {
        printf(" %s\t\t%d\t\t%d\t\t%d\n", processes[i].name, processes[i].bt, processes[i].wt, processes[i].tat);
    }

    float avg_wt = (float)total_wt / (float)n;
    float avg_tat = (float)total_tat / (float)n;
    printf("Average Waiting Time = %f\n", avg_wt);
    printf("Average Turn Around Time = %f\n", avg_tat);
}

int main() {
    int n, quantum;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    printf("Enter time quantum: ");
    scanf("%d", &quantum);

    Process processes[n];

    for (int i = 0; i < n; i++) {
        sprintf(processes[i].name, "P%d", i);
        printf("Enter burst time for %s: ", processes[i].name);
        scanf("%d", &processes[i].bt);
        processes[i].remaining_bt = processes[i].bt;
    }

    findavgTime(processes, n, quantum);
    return 0;
}
