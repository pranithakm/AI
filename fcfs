#include <stdio.h>

typedef struct {
    char name[3];
    int burst_time;
    int tat;
    int wt;
} Process;

void findWaitingTime(Process processes[], int n) {
    processes[0].wt = 0;
    for (int i = 1; i < n; i++) 
        processes[i].wt = processes[i-1].burst_time + processes[i-1].wt;
}

void findTurnAroundTime(Process processes[], int n) {
    for (int i = 0; i < n; i++) 
        processes[i].tat = processes[i].burst_time + processes[i].wt;
}

void findavgTime(Process processes[], int n) {
    int total_wt = 0, total_tat = 0;

    findWaitingTime(processes, n);
    findTurnAroundTime(processes, n);

    printf("Processes Burst time Waiting time Turn around time\n");

    for (int i = 0; i < n; i++) {
        total_wt += processes[i].wt;
        total_tat += processes[i].tat;
        printf("\t%s\t\t\t%d\t\t\t%d\t\t\t%d\n", processes[i].name, processes[i].burst_time, processes[i].wt, processes[i].tat);
    }

    float avg_wt = (float) total_wt / (float) n;
    float avg_tat = (float) total_tat / (float) n;
    printf("Average waiting time = %.2f\n", avg_wt);
    printf("Average turn around time = %.2f\n", avg_tat);
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    Process processes[n];

    for (int i = 0; i < n; i++) {
        sprintf(processes[i].name, "P%d", i);
        printf("Enter burst time for process %s: ", processes[i].name);
        scanf("%d", &processes[i].burst_time);
    }

    findavgTime(processes, n);
    return 0;
}
